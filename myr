#!/usr/bin/env python3

import argparse
import datetime
import json
import os
import subprocess
import sys
import time

# command line args
parser = argparse.ArgumentParser()
parser.add_argument("--daily", action="store_true")
args = parser.parse_args()

# read repo list
with open('repos.json', 'r', encoding='utf-8') as f:
    repos = json.load(f)

# check valid mirror directory
MYR_DIR = os.environ.get("MYR_DIR")
if not MYR_DIR:
    print("MYR_DIR env variable not set, exiting.")
    sys.exit(1)
os.makedirs(MYR_DIR, exist_ok=True)
os.chdir(MYR_DIR)

def clone():
    print(datetime.datetime.now())

    for repo in repos:
        url = repo['url']
        url = url.rstrip('/') # remove trailing /
        repo_name = url.split('/')[-1] # repo name
        repo_name += ".git" # add .git to match bare repo

        # clone repo, or update if exists
        if os.path.isdir(repo_name):
            print("updating " + repo_name)
            subprocess.run(["git", "-C", repo_name, "fetch", "--all", "--prune", "--prune-tags"])
        else:
            subprocess.run(["git", "clone", "--mirror", url])

        # update description
        desc_path = repo_name + "/description"
        with open(desc_path, 'w') as f:
            f.write(repo['desc'])

if args.daily:
    while True:
        clone()
        time.sleep(24 * 60 * 60)
else:
    clone()
